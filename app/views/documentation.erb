<div id="guide" class="stick">
  <p class="ref-title">API</p>
  <ul class="ref-list">
    <li class="section">
      <a class="parent" href="#intro">Introduction</a>
    </li>
    <li class="section">
      <a class="parent" href="#authentication">Authentication</a>
    </li>
    <li class="section">
      <a class="parent" href="#errors">Errors</a>
    </li>
  </ul>
  <p class="ref-title"> Resources</p>
  <ul class="ref-list">
    <li class="section">
      <a class="parent" href="#omniauth-dbc">'omniauth-dbc' gem</a>
    </li>
    <li class="section">
      <a class="parent" href="#second-gem">second-gem</a>
    </li>
    <li class="section">
      <a class="parent" href="#"></a>
    </li>
  </ul>
  <p class="ref-title">METHODS</p>
  <ul class="ref-list">
    <li class="section">
      <a class="parent" href="#Challenge-Attempts">Challenge Attempts</a>
    </li>
    <li class="section">
      <a class="parent" href="#Challenges">Challenges</a>
    </li>
    <li class="section">
      <a class="parent" href="#Cohorts">Cohorts</a>
    </li>
    <li class="section">
      <a class="parent" href="#Exercise-Attempts">Exercise Attempts</a>
    </li>
    <li class="section">
      <a class="parent" href="#Exercises">Exercises</a>
    </li>
    <li class="section">
      <a class="parent" href="#Users">Users</a>
    </li>
  </ul>
</div>
<div id="api-docs">
  <a id="top" name="top" class="section-anchor">&nbsp;</a>
  <div id="methods">
    <div class="method">
      <a id="intro" name="intro" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h1> API Reference </h1>
          <p>
            The Dev Bootcamp (DBC) application programming interface, or API, is designed on [<a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm">REST</a>] principles. Our approach entails simple, descriptive URLs used to obtain resources.  We use HTTP features, such as the HTTP verb GET, [<a href="https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security">HTTP Secure</a>], and HTTP response codes for API errors.  Successful API calls will result in [<a href="http://www.json.org/">JSON</a>] responses. Hopefully these engineering choices enable developers to maximize their productivity.
          </p>
          <p>
            The Dev Bootcamp API allows authenticated users to access select data such as a student's social media urls, a cohort's Socrates submissions, or a Dev Bootcamp location's total number of students. This data can be used to create applications that leverage DBC info into useful creations limited only by a developer's imagination.
          </p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>API Endpoint</h3>
          <p>https://api/devbootcamp.com/</p>
          <h4>Resource URL Patterns</h4>
          <ul>
            <li>/v1/{USER_ID}/challenge_attempts</li>
            <li>/v1/{USER_ID}/challenge_attempts/{CHALLENGE_ATTEMPTS_ID}</li>
            <li>/v1/challenges</li>
            <li>/v1/challenges/{CHALLENGES_ID}</li>
            <li>/v1/cohorts</li>
            <li>/v1/cohorts/{COHORT_ID}</li>
            <li>/v1/{USER_ID}/exercise_attempts</li>
            <li>/v1/{USER_ID}/exercise_attempts/{CHALLENGE_ATTEMPTS_ID}</li>
            <li>/v1/exercises</li>
            <li>/v1/exercises/{EXERCISES_ID}</li>
            <li>/v1/users</li>
            <li>/v1/users/{USER_ID}</li>
          </ul>
          <h4>Color codes for the examples</h4>
            <ul>
              <li><span class=red>WORD</span></li>
              <li><span class=dbc-blue >WORD</span></li>
              <li><span class=yellow >WORD</span></li>
              <li><span class=cloud >WORD</span></li>
              <li><span class=dbc-orange >WORD</span></li>
            </ul>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="authentication" name="authentication" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Authentication </h3>
          <p>
            The DBC API uses [<a href="http://tools.ietf.org/html/rfc6749">OAuth 2.0</a>] through [<a href="https://auth.devbootcamp.com/">DBC Auth</a>] to authenticate users. Authenticated users are provided an API key, which must not be shared. This key is used by its inclusion in the [<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">HTTP headers</a>] to authorize API requests, which MUST be made over HTTPS.
          </p>
        </div>
        <div class="method-example" id="api-summary-eample">
          <h3>Token Configuration</h3>
          <p>Your DevBootcamp API token should be configured as an environment variable.</p>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
ENV['DBC-API'] = 'test_token12345'
          </code>
          </pre>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="errors" name="errors" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Errors </h3>
          <p>
            If you need more information on Errors try these:
          </p>
          <p><a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes">Wikipedia</a></p>
          <p>
            <a href="http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml">The Status Code Registry</a>
          </p>
          <p>
            <a href="http://docs.cpanel.net/twiki/bin/vief/AllDocumentation/CpanelDocs/HTTPCodes">Quick Fixes</a>
          </p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>HTTP Status Code Summary </h3>
          <p>200 OK - Everything worked as expected.</p>
          <p>400 Bad Request - Often missing a required parameter.</p>
          <p>401 Unauthorized - No valid API key provided.</p>
          <p>402 Request Failed - Parameters were valid but request failed.</p>
          <p>404 Not Found - The requested item doesn't exist.</p>
          <p>500, 502, 503, 504 Server errors - something went wrong on our end. Sorry!</p>
        </div>
      </div>
    </div>
     <div class="method">
      <a id="omniauth-dbc" name="omniauth-dbc" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3>'Omniauth-dbc' gem</h3>
          <p>This is the official <a href="https://github.com/intridea/omniauth">OmniAuth</a> strategy for authenticating with auth.devbootcamp.com. To use it you'll need to get a client id and secret from <a href="https://auth.devbootcamp.com">Devbootcamp Auth</a>.</p>
          <p> The 'ominauth-dbc' gem allows you to verify your users through their Socrates log in credentials. </p>
          <p>You can find the <a href=https://github.com/socrates-api/omniauth-dbc>Omniauth Devbootcamp Strategy here!</a></p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Example Usage</h3>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="second-gem" name="second-gem" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3>DBC-Ruby gem</h3>
          <p>
          </p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Example Usage</h3>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="Challenge-Attempts" name="Challenge-Attempts" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Challenge Attempts </h3>
          <p>
            Challenge attempts are a selection of a user's attempts at a particular Socrates challenge when a challenge id is given. Otherwise you will receive all of the challenges for a given user.
          </p>
          <p>
            <span class=dbc-blue >"challenge_id" :</span> Can be found within the URL of any challenge when viewed on Socrates. "<a href="http://socrates.devbootcamp.com/challenges/20">http://socrates.devbootcamp.com/challenges/20</a>" Deaf Grandma, for example, has an id of 20. This would give you back all of the challenge ids that a particular user had attempted.
          </p>
          <P>
            <span class=dbc-blue >"repo" :</span> Will give you the github repos' urls for a given user or challenge.
          </p>
          <p>
            <span class=dbc-blue >"finished_at" :</span> This will return a date time string indicating the dates a student finished the given challenge or all of the occasions that the challenge was completed over the history of DBC.
          </p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Example Usage</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
Socrates::ChallengeAttempts.find(1)
Socrates::ChallengeAttempts.all(per_page: 10, page: 2)
          </code>
          </pre>
          <h3>Example Response</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
challenge_attempt: JSON: {
  "repo": "http://github.com/example",
  "challenge_id": 1,
  "finished_at": "2013-12-01" 
}
          </code>
          </pre>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="Challenges" name="Challenges" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Challenges </h3>
          <p>
            Challenges, will give you all of Socrates challenges.
            If you had a particular challenge in mind you can include the challenge id in your request.
          </p>
          <p>
            <span class=dbc-blue >"created_at" :</span> This will give the creation date of a given challenge by id or a history of when all of the challenges of Socrates were created.
          </p>
          <p>
            <span class=dbc-blue >"description" :</span> Gives you the Socrates instructions for a challenge.
          </p>
          <p>
            <span class=dbc-blue >"id" :</span> When polling all of the challenges you can receive a list of the challenge ids.
          </p>
          <p>
            <span class=dbc-blue >"name" :</span> Will give you the titles of the Socrates challenges.
          </p>
          <p>
            <span class=dbc-blue >"source_repo" :</span> This lists the Github repo urls by challenge id or as a collection.
          </p>
          <p>
            <span class=dbc-blue >"updated_at" :</span> Will display the date string for the last occasion that the challenge(s) were changed.
          </p>
        </div>
        <div class="method-example" id="api-summary-eample">
                    <h3>Example Usage</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
Socrates::Challenges.find(1)
Socrates::Challenge.all(per_page: 10, page: 2)
          </code>
          </pre>
          <h3>Example Response</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
challenge: JSON: {
  "name": "Deaf Grandma",
  "id": 20,
  "created_at": "2013-12-01" 
}
          </code>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="Cohorts" name="Cohorts" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Cohorts </h3>
          <p>
            This will give you information on DBC Cohorts (graduating classes) which might include for example the: "Squirrels", "Otters", or "Grasshoppers".
          </p>
          <p>
            <span class=dbc-blue >"email" :</span> This will give you a cohort's email address or a list of the cohorts email addresses.
          </p>
          <p>
            <span class=dbc-blue >"id" :</span> This will give you the id numbers for all of the cohorts.
          </p>
          <p>
            <span class=dbc-blue >"in_session" :</span> This will give let you know if a particular cohort is in session.
          </p>
          <p>
            <span class=dbc-blue >"location" :</span> This will tell you if a cohort is in Chicago or San Francisco.
          </p>
          <p>
            <span class=dbc-blue >"name" :</span> This will give a list of the cohort's names or a particular name when given the cohort's id number.
          </p>
          <p>
            <span class=dbc-blue >"start_date" :</span> This will give you a cohort's start date when given an id.
          </p>
        </div>
        <div class="method-example" id="api-summary-eample">
          <h3>Right Column Cohorts code header</h3>
          <p>Right column Cohorts code body.</p>
          <p> "Cohorts CODE EXAMPLES"</p>
          <p> END OF PAGE! THIS SHOULD BE ABOVE THE FOOTTER</p>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="Exercise-Attempts" name="Exercise-Attempts" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Exercise Attempts </h3>
          <p>
            Excercises are also know to the DBC students as prework. These are the challenges that we master before arriving at DBC during the 2 month prep period. The exercise attempts are a record of an individual attempt at a particular exercise or their complete history of attempts during the prework period.
          </p>
          <p>
           <span class=dbc-blue >"created_at" :</span> This will give you the creation dates of an individual's excercise attempts for a particular challenge or all of his attempts during the prework period.
          </p>
          <p>
           <span class=dbc-blue >"code" :</span> This will select the prework code from a given user. You may specify a particular exercise by ID if you wish.
          </p>
          <p>
           <span class=dbc-blue >"exercise_id" :</span> This will list the id numbers for all of the prework exercises a user has attempted.
          </p>
          <p>
           <span class=dbc-blue >"results" :</span> This will allow you to see the
          </p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Right Column Exercise Attempts code header</h3>
          <p>Right column Exercise Attempts code body.</p>
          <p> "Exercise Attempts CODE EXAMPLES"</p>
          <p> END OF PAGE! THIS SHOULD BE ABOVE THE FOOTER</p>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="Exercises" name="Exercises" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Exercises </h3>
          <p>
            Excercises are also know to the DBC students as prework. These are the challenges that we master before arriving at DBC during the 2 month prep period.
          </p>
          <p>
           <span class=dbc-blue >"hint" :</span> This will give you the hints for a particular exercise.
          </p>
          <p>
           <span class=dbc-blue >"id" :</span> This will give you the id numbers for all of the excercises.
          </p>
          <p>
           <span class=dbc-blue >"initial_code" :</span> With an id number this will give you the code that an excercises presents to a student as a starting block to begin a challenge.
          </p>
          <p>
           <span class=dbc-blue >"intro" :</span> This will give you the instructions for each of the exercises.
          </p>
          <p>
           <span class=dbc-blue >"solution" :</span> With an id number this will provide you with all of the student solutions to a given exercise.
          </p>
          <p>
           <span class=dbc-blue >"validator_code" :</span> With an id number this will provide you with all of the RSpec code for a given exercise. The RSpec
          </p>
          <p>
           <span class=dbc-blue >"wrapper_code" :</span> ?????
          </p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Right Column Exercises code header</h3>
          <p>Right column Exercises code body.</p>
          <p> "Exercises CODE EXAMPLES"</p>
          <p> END OF PAGE! THIS SHOULD BE ABOVE THE FOOTER</p>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="Users" name="Users" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Users </h3>
          <p>
            The API can be used to aggregate the information of DBC instructors and students.
          </p>
          <p>
            <span class=dbc-blue >"bio" :</span> This will give you a user's bio as written on their DBC profile page. This would include their "About me", "Hometown", and "Current Location".
          </p>
          <p>
            <span class=dbc-blue >"cohort_id" :</span> This can be used to find the cohort id for a particular user or to find out how many users are in each cohort.
          </p>
          <p>
            <span class=dbc-blue >"email" :</span> This will give you a complete list of past and present DBC students' and instructors' email address or a single email address by user id.
          </p>
          <p>
            <span class=dbc-blue >"id" :</span> This will give you a list of DBC user ids.
          </p>
          <p>
            <span class=dbc-blue >"name" :</span> This gives the names of DBC personnel or a single name when given an id number.
          </p>
          <p>
            <span class=dbc-blue >"profile" :</span> Through the profile call you can access a users social media info including: Github, Quora, Twitter, Facebook, Linked In, Blogs, and Hacker News.
          </p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Right Column Users code header</h3>
          <p>Right column Users code body.</p>
          <p> "Users CODE EXAMPLES"</p>
          <p> END OF PAGE! THIS SHOULD BE ABOVE THE FOOTER</p>
        </div>
      </div>
    </div>
  </div>
</div>
