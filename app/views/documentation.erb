<div id="guide" class="stick">
  <p class="ref-title">API</p>
  <ul class="ref-list">
    <li class="section">
      <a class="parent" href="#intro">Introduction</a>
    </li>
    <li class="section">
      <a class="parent" href="#authentication">Authentication</a>
    </li>
    <li class="section">
      <a class="parent" href="#errors">Errors</a>
    </li>
  </ul>
  <p class="ref-title"> RESOURCES</p>
  <ul class="ref-list">
    <li class="section">
      <a class="parent" href="#omniauth-dbc">OmniAuth Strategy</a>
    </li>
    <li class="section">
      <a class="parent" href="#dbc-ruby">Ruby Client</a>
    </li>
    <li class="section">
      <a class="parent" href="#app-skeleton">Application Skeleton</a>
    </li>
  </ul>
  <p class="ref-title">METHODS</p>
  <ul class="ref-list">
    <li class="section">
      <a class="parent" href="#Challenge-Attempts">Challenge Attempts</a>
    </li>
    <li class="section">
      <a class="parent" href="#Challenges">Challenges</a>
    </li>
    <li class="section">
      <a class="parent" href="#Cohorts">Cohorts</a>
    </li>
    <li class="section">
      <a class="parent" href="#Exercise-Attempts">Exercise Attempts</a>
    </li>
    <li class="section">
      <a class="parent" href="#Exercises">Exercises</a>
    </li>
    <li class="section">
      <a class="parent" href="#Users">Users</a>
    </li>
  </ul>
</div>
<div id="api-docs">
  <a id="top" name="top" class="section-anchor">&nbsp;</a>
  <div id="methods">
    <div class="method">
      <a id="intro" name="intro" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h1> API Reference </h1>
          <p>
            The Dev Bootcamp (DBC) application programming interface, or API, is designed on [<a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm">REST</a>] principles. Our approach entails simple, descriptive URLs used to obtain resources.  We use HTTP features, such as the HTTP verb GET, [<a href="https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security">HTTP Secure</a>], and HTTP response codes for API errors.  Successful API calls will result in [<a href="http://www.json.org/">JSON</a>] responses. Hopefully these engineering choices enable developers to maximize their productivity.
          </p>
          <p>
            The Dev Bootcamp API allows authenticated users to access select data such as a student's social media urls, a cohort's Socrates submissions, or a Dev Bootcamp location's total number of students. This data can be used to create applications that leverage DBC info into useful creations limited only by a developer's imagination.
          </p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>API Endpoint</h3>
          <p>https://api.devbootcamp.com/</p>
          <h4>Resource URL Patterns</h4>
          <ul>
            <li>/v1/{USER_ID}/challenge_attempts</li>
            <li>/v1/{USER_ID}/challenge_attempts/{CHALLENGE_ATTEMPT_ID}</li>
            <li>/v1/challenges</li>
            <li>/v1/challenges/{CHALLENGE_ID}</li>
            <li>/v1/cohorts</li>
            <li>/v1/cohorts/{COHORT_ID}</li>
            <li>/v1/{USER_ID}/exercise_attempts</li>
            <li>/v1/{USER_ID}/exercise_attempts/{EXERCISE_ATTEMPT_ID}</li>
            <li>/v1/exercises</li>
            <li>/v1/exercises/{EXERCISE_ID}</li>
            <li>/v1/users</li>
            <li>/v1/users/{USER_ID}</li>
          </ul>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="authentication" name="authentication" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Authentication </h3>
          <p>
            The DBC API uses [<a href="http://tools.ietf.org/html/rfc6749">OAuth 2.0</a>] through [<a href="https://auth.devbootcamp.com/">DBC Auth</a>] to authenticate users. Authenticated users are provided an API key, which must not be shared. This key is used by its inclusion in the [<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">HTTP headers</a>] to authorize API requests, which MUST be made over HTTPS.
          </p>
        </div>
        <div class="method-example" id="api-summary-eample">
          <h3>Token Configuration</h3>
          <p>Your DevBootcamp API token can be configured as an environment variable or through the ruby client.</p>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
require 'dbc-ruby'

ENV['DBC_API'] = 'test_token12345'
# or
DBC.token = 'test_token123'
          </code>
          </pre>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="errors" name="errors" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Errors </h3>
          <p>
            If you need more information on Errors try these:
          </p>
          <p><a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes">Wikipedia</a></p>
          <p>
            <a href="http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml">The Status Code Registry</a>
          </p>
          <p>
            <a href="http://docs.cpanel.net/twiki/bin/vief/AllDocumentation/CpanelDocs/HTTPCodes">Quick Fixes</a>
          </p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>HTTP Status Code Summary </h3>
          <p>200 OK - Everything worked as expected.</p>
          <p>401 Unauthorized - Invalid API key.</p>
          <p>404 Not Found - The requested item doesn't exist.</p>
          <p>500 Server error - something went wrong on our end. Sorry!</p>
        </div>
      </div>
    </div>
     <div class="method">
      <a id="omniauth-dbc" name="omniauth-dbc" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3>OmniAuth Strategy</h3>
          <p>We've created an official <a href="https://github.com/intridea/omniauth">OmniAuth</a> strategy for authenticating with auth.devbootcamp.com. To use it you'll need to get a client id and secret from <a href="https://auth.devbootcamp.com">Devbootcamp Auth</a>.</p>
          <p> The 'ominauth-dbc' gem allows you to verify your users through their DBC log in credentials. </p>
          <p>You can find the Omniauth Devbootcamp Strategy <a href=https://github.com/socrates-api/omniauth-dbc>here!</a></p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Example Usage</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
gem 'omniauth-dbc'

use OmniAuth::Builder do
  provider :dbc, ENV['OAUTH_CLIENT_ID'], ENV['OAUTH_CLIENT_SECRET']
end
          </code>
          </pre>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="dbc-ruby" name="dbc-ruby" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3>Ruby Client</h3>
          <p>
          </p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Example Usage</h3>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="app-skeleton" name="app-skeleton" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3>Application Skeleton</h3>
          <p>
          </p>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Example Usage</h3>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="Challenge-Attempts" name="Challenge-Attempts" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Challenge Attempts </h3>
          <p>
            Challenge attempts are a selection of a user's Socrates challenge attempts. Challenge Attempts must be requested for a specific user. The API allows you to access all challenge attempts for a particular user, or find a specific challenge attempt by id.
          </p>
          <p><i>Attributes</i></p>
          <div class='attributes'>
          <p>
            <span class=dbc-blue >"challenge_id" :</span> The id for the corresponding challenge. This can be found within the URL of any challenge when viewed on Socrates. "<a href="http://socrates.devbootcamp.com/challenges/20">http://socrates.devbootcamp.com/challenges/20</a>" Deaf Grandma, for example, has an id of 20.
          </p>
          <P>
            <span class=dbc-blue >"repo" :</span> The GitHub repository url for a given attempt.
          </p>
          <p>
            <span class=dbc-blue >"finished_at" :</span> A date time string indicating the date the student finished the given challenge.
          </p>
          </div>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Example Usage</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
DBC::ChallengeAttempt.find(1, 20)
DBC::ChallengeAttempt.all(1, per_page: 10, page: 2)
          </code>
          </pre>
          <h3>Example Response</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
"challenge_attempt": {
  "repo": "http://github.com/example",
  "challenge_id": 1,
  "finished_at": "2013-12-01"
}
          </code>
          </pre>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="Challenges" name="Challenges" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Challenges </h3>
          <p>
            Challenge requests will give you all published Socrates challenges.
            If you had a particular challenge in mind you can include the challenge id in your request.
          </p>
          <p><i>Attributes</i></p>
          <div class='attributes'>
          <p>
            <span class=dbc-blue >"created_at" :</span> The creation date of a given challenge.
          </p>
          <p>
            <span class=dbc-blue >"description" :</span> The Socrates instructions for a challenge.
          </p>
          <p>
            <span class=dbc-blue >"id" :</span> The challenge id.
          </p>
          <p>
            <span class=dbc-blue >"name" :</span> The titles of the Socrates challenge.
          </p>
          <p>
            <span class=dbc-blue >"source_repo" :</span> The GitHub repository for a challenge.
          </p>
          <p>
            <span class=dbc-blue >"updated_at" :</span> The date string for the last occasion that the challenge was changed.
          </p>
          </div>
        </div>
        <div class="method-example" id="api-summary-eample">
          <h3>Example Usage</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
DBC::Challenge.find(1)
DBC::Challenge.all(per_page: 10, page: 2)
          </code>
          </pre>
          <h3>Example Response</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
"challenge": {
  "name": "Deaf Grandma",
  "id": 20,
  "created_at": "2013-12-01",
  "source_repo": "http://github.com/example",
  "updated_at": "2013-01-21"
}
          </code>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="Cohorts" name="Cohorts" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3>Cohorts</h3>
          <p>
            This will give you information on DBC Cohorts, for example, the "Squirrels", "Otters", or "Grasshoppers".
          </p>
          <p><i>Attributes</i></p>
          <div class='attributes'>
          <p>
            <span class=dbc-blue >"email" :</span> A cohort's email address.
          </p>
          <p>
            <span class=dbc-blue >"id" :</span> The cohort id.
          </p>
          <p>
            <span class=dbc-blue >"in_session" :</span> A boolean value indicating whether the cohort is currently in session.
          </p>
          <p>
            <span class=dbc-blue >"location" :</span> The location of the cohort(Chicago or San Francisco).
          </p>
          <p>
            <span class=dbc-blue >"name" :</span> The cohort name.
          </p>
          <p>
            <span class=dbc-blue >"start_date" :</span> The cohort's start date.
          </p>
          </div>
        </div>
        <div class="method-example" id="api-summary-eample">
          <h3>Example Usage</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
DBC::Cohort.find(1)
DBC::Cohort.all
          </code>
          </pre>
          <h3>Example Response</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
"cohort": {
  "name": "Grasshoppers",
  "id": 4,
  "email": "grasshoppers@devbootcamp.com",
  "created_at": "2013-12-01",
  "location": "Chicago",
  "in_session": "true",
  "start_date": "2013-06-20"
}
          </code>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="Exercise-Attempts" name="Exercise-Attempts" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Exercise Attempts </h3>
          <p>
            Excercises are also known to the DBC students as prework. These are the challenges mastered during the 2 month prep period before arriving at DBC. The exercise attempts are a record of an individual attempt at a particular exercise.
          </p>
          <p><i>Attributes</i></p>
          <div class='attributes'>
          <p>
           <span class=dbc-blue >"created_at" :</span> A date time string representing the time of the attempt.
          </p>
          <p>
           <span class=dbc-blue >"code" :</span> The submitted code for the attempt.
          </p>
          <p>
           <span class=dbc-blue >"exercise_id" :</span> The id of the corresponding exercise.
          </p>
          <p>
           <span class=dbc-blue >"results" :</span> The results of the submitted attempt.
          </p>
          </div>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Example Usage</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
DBC::ExerciseAttempt.find(1, 12)
DBC::ExerciseAttempt.all(per_page: 30, page: 4)
          </code>
          </pre>
          <h3>Example Response</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
"exercise_attempt": {
  "results": "xxxxx",
  "code": "xxxxx",
  "exercise_id": 20,
  "created_at": "2013-12-01"
}
          </code>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="Exercises" name="Exercises" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Exercises </h3>
          <p>
            A request for exercises will provide the code and solution for a prework exercise.
          </p>
          <p><i>Attributes</i></p>
          <div class='attributes'>
          <p>
           <span class=dbc-blue >"hint" :</span> The provided hint for a particular exercise.
          </p>
          <p>
           <span class=dbc-blue >"id" :</span> The exercise id.
          </p>
          <p>
           <span class=dbc-blue >"initial_code" :</span> The code that an excercises presents to a student as a starting block to begin a challenge.
          </p>
          <p>
           <span class=dbc-blue >"intro" :</span> The instructions for the exercise.
          </p>
          <p>
           <span class=dbc-blue >"solution" :</span> The solution for the exercise.
          </p>
          <p>
           <span class=dbc-blue >"validator_code" :</span> The validation code used for exercise attempts.
          </p>
          <p>
           <span class=dbc-blue >"wrapper_code" :</span> The wrapper code used to assist the exercise.
          </p>
          </div>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Example Usage</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
DBC::Exercise.find(1)
DBC::Exercise.all
          </code>
          </pre>
          <h3>Example Response</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
"challenge": {
  "hint": "example hint",
  "id": 20,
  "initial_code": "xxxxx",
  "intro": "example intro",
  "solution": "xxxxx",
  "validator_code": "xxxxxx",
  "wrapper_code": "xxxxxx"
}
          </code>
        </div>
      </div>
    </div>
    <div class="method">
      <a id="Users" name="Users" class="section-anchor">&nbsp;</a>
      <div class="method-section">
        <div class="method-description">
          <h3> Users </h3>
          <p>
            User objects can be used to aggregate the information of DBC instructors and students.
          </p>
          <p><i>Attributes</i></p>
          <div class='attributes'>
          <p>
            <span class=dbc-blue >"bio" :</span>The user's bio as written on their DBC profile page.
          </p>
          <p>
            <span class=dbc-blue >"cohort_id" :</span> The id of the cohort the user belongs to.
          </p>
          <p>
            <span class=dbc-blue >"email" :</span> The user's email address.
          </p>
          <p>
            <span class=dbc-blue >"id" :</span> The user's id.
          </p>
          <p>
            <span class=dbc-blue >"name" :</span> The user's name.
          </p>
          <p>
            <span class=dbc-blue >"profile" :</span> Through the profile call you can access a users social media info including: Github, Quora, Twitter, Facebook, LinkedIn, blog, and Hacker News.
          </p>
          </div>
        </div>
        <div class="method-example" id="api-summary-example">
          <h3>Example Usage</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
DBC::User.find(1)
DBC::User.all(per_page: 10, page: 2)
          </code>
          </pre>
          <h3>Example Response</h3>
          <!--?prettify lang=rb -->
          <pre class="prettyprint" id="rb" style="none">
          <code>
"user": {
  "name": "Michael Jordan",
  "id": 23,
  "bio": "example bio",
  "cohort_id": 1,
  "email": "michael@devbootcamp.com",
  "profile": {
    "github": "http://github.com/mj",
    "twitter": "mj23",
    ...
  }
}
          </code>
        </div>
      </div>
    </div>
  </div>
</div>
